<!-- Copyright (C) The IETF Trust (2018) -->
<!-- Copyright (C) The Internet Society (2018) -->

<section anchor="sec:offline" title="Offline Files">

  <t>
    If a file is offline, then the server locally has the file's
    attributes, but not the file's content. It has to be able to present
    to the client enough information to describe the file, but the content
    is not readily available.  The cost of retrieving the data content is
    expensive, to the extent that the content should only be retrieved
    if it is going to be used.  A graphical file manager (such as OSX's
    Finder) may want to access the beginning of the file to preview it
    for an user who is hovering his pointer over the file name.  If the
    file is retrieved, it will most likely either be immediately thrown
    away or returned.
  </t>

  <t>
    A compound with a GETATTR or READDIR can report the file's attributes
    without bringing the file online.  However, either an OPEN or a
    LAYOUTGET might cause the file server to retrieve the archived
    data contents, bringing the file online.  For non-pNFS systems,
    the OPEN operation requires a filehandle to the data content. For
    pNFS systems, the filehandle retrieved from an OPEN need not cause
    the data content to be retrieved. But when the LAYOUTGET operation
    is processed, a layout type specific mapping will cause the data
    content to be retrieved from offline storage.
  </t>

   <t>
    If an operating system is not aware that the file is offline, it
    might inadvertently open the file to determine what type of file it is
    accessing.  By adding the new attribute FATTR4_OFFLINE, a client can
    predetermine the availability of the file, avoiding the need to open
    it at all. Being offline might also mean that the file is archived
    in the cloud, i.e., there can be an expense in both retrieving the
    file to bring online and in sending the file back to offline status.
  </t>

  <t>
    &lt;CODE BEGINS&gt;
  </t>

<figure>
 <artwork>
///
/// typedef bool            fattr4_offline;
///
 </artwork>
</figure>

<figure>
 <artwork>
///
/// const FATTR4_OFFLINE            = 83;
///
 </artwork>
</figure>

  <t>
    &lt;CODE ENDS&gt;
  </t>
</section>
