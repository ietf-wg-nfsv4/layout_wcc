<!-- Copyright (C) The IETF Trust (2018) -->
<!-- Copyright (C) The Internet Society (2018) -->

<section anchor="sec:intro" title="Introduction">
  <t>
    In the Network File System version4 (NFSv4) a client may be granted
    a delegation for a file. This allows the client to act as the
    authority of the file's metadata and data. In this document, we
    introduce some new semantics to both the open and the delegation
    process which allows the client to:

    <list style='symbols'>
      <t>
        determine the extension of OPEN
        (see Section 18.16 of <xref target="RFC5661" />) flags.
      </t>

      <t>
        during the OPEN procedure, get either the open
        or delegation stateids, but not both.
      </t>

      <t>
        detect an offline file, which may be located off premise.
      </t>

      <t>
        cache both the access and modify times, reducing the
        number of times the client needs to go to the server
        to get that information.
      </t>

      <t>
        for clients using Parallel NFS (pNFS) (see Section 12 of
        <xref target="RFC5661" />), periodically report the
        attributes of the data files to the metadata server.
      </t>
    </list>
  </t>

  <t>
    Using the process detailed in <xref target="RFC8178" />,
    the revisions in this document become an extension of NFSv4.2
    <xref target='RFC7862' />. They are built on top of the
    external data representation (XDR) <xref target='RFC4506' />
    generated from <xref target='RFC7863' />.
  </t>

  <section anchor='sec:defs' title='Definitions'>
    <t>
      <list style='hanging'>
        <t hangText='delegation:'> A file delegation, which is
          a recallable lock that assures the holder that inconsistent
          opens and file changes cannot occur so long as the
          delegation is held.
        </t>
        <t hangText='stateid:'>  A stateid is a 128-bit quantity
          returned by a server that uniquely defines state held
          by the server for the client. (See Section 8 of
          <xref target="RFC5661" />)
        </t>
        <t hangText='weak cache consistency (WCC):'>  In NFSv3,
          operations are not sent in a compound, hence the client would
          have to perform two round trips to the server in order to
          determine the result of modification to the state of a file
          or directory.  With WCC, the server can return post-operation
          attributes on such operations. As these do not provide a strict
          consistency between the server and client, the client is free to
          ignore the data.  (See Section 2.6 of <xref target='RFC1813' />)
        </t>
      </list>
    </t>
  </section>
  <section title="Requirements Language">
    <t>
      The key words &quot;MUST&quot;, &quot;MUST NOT&quot;,
      &quot;REQUIRED&quot;, &quot;SHALL&quot;, &quot;SHALL NOT&quot;,
      &quot;SHOULD&quot;, &quot;SHOULD NOT&quot;, &quot;RECOMMENDED&quot;,
      &quot;MAY&quot;, and &quot;OPTIONAL&quot; in this document are to be
      interpreted as described in <xref target="RFC2119" />.
    </t>
  </section>
</section>
